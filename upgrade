#!/bin/bash
if [[ $1 == "" ]]; then
    echo "ERROR: Enter new version | e.g: 1.7"
    exit
fi
a=`arch`
str="aarch"
result=$(echo $a | grep "${str}")
if [[ "$result" != "" ]]; then
    TYPEOS="arm"
else
    TYPEOS="amd"
fi
GREEN="\e[1m\e[1;32m" # green color
RED="\e[1m\e[1;31m" # red color
BLUE='\033[0;34m'   # blue color
YELLOW="\e[1m\e[1;33m"  # yellow color
NC="\e[0m"          # no color
BINARY_VERSION=$1
BINARY_LINK="https://github.com/pactus-project/pactus/releases/download/v${BINARY_VERSION}/pactus-cli_${BINARY_VERSION}_linux_${TYPEOS}64.tar.gz"
if curl -s --head $BINARY_LINK | head -n 1 | grep "302" > /dev/null; then
  echo "Will update to version $BINARY_VERSION"
else
  echo -e "${RED}ERROR: Not found version $BINARY_VERSION ${NC}"
  exit
fi
clear
echo -e "${RED}\n############################################\nPACTUS UPGRADE BY NODDEX.COM\n############################################${NC}"
echo -e "${YELLOW}"
$HOME/node_pactus/pactus-daemon version
echo -e "New version   : $BINARY_VERSION\nYour OS       : $TYPEOS ${NC}"
echo "Waiting 15s..."
sleep 15
curl -L "$BINARY_LINK" | tar -zxvf - -C $HOME/node_pactus --strip-components=1 > /dev/null
echo -e "${GREEN}\n############################################\nUPGRADE SUCCESSFULLY"
$HOME/node_pactus/pactus-daemon version
echo -e "############################################${NC}"
echo "Waiting 10s to restart service..."
sleep 10
systemctl restart pactusd
echo "DONE!"
echo -e "Check log:\njournalctl -u pactusd -fo cat"
